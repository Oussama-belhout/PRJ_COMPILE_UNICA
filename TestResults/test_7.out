entering now scope-----
we got to const : 45000 
just got the aff 	
aff (i = 45000)
we got to const : 123 
just got the aff 	
aff (j = (-123))
we got to const : 43 
just got the aff 	
aff (k = 43)
just created new_binop
(i + j)
reducing the bin op (+) propagated to experession
just created new_binop
((i + j)
 * k)
reducing the bin op (*) propagated to experession
we got to const : 100 
just created new_binop
(((i + j)
 * k)
 / 100)
reducing the bin op (/) propagated to experession
just created new_binop
((((i + j)
 * k)
 / 100)
 + j)
reducing the bin op (+) propagated to experession
just created new_binop
(((((i + j)
 * k)
 / 100)
 + j)
 * k)
reducing the bin op (*) propagated to experession
just created new_binop
((((((i + j)
 * k)
 / 100)
 + j)
 * k)
 * i)
reducing the bin op (*) propagated to experession
just created new_binop
(((((((i + j)
 * k)
 / 100)
 + j)
 * k)
 * i)
 - j)
reducing the bin op (-) propagated to experession
just created new_binop
((((((((i + j)
 * k)
 / 100)
 + j)
 * k)
 * i)
 - j)
 << k)
reducing the bin op (<<) propagated to experession
just created new_binop
(k - j)
reducing the bin op (-) propagated to experession
we got to const : 2 
just created new_binop
((k - j)
 >> 2)
reducing the bin op (>>) propagated to experession
just created new_binop
(((((((((i + j)
 * k)
 / 100)
 + j)
 * k)
 * i)
 - j)
 << k)
 / ((k - j)
 >> 2)
)
reducing the bin op (/) propagated to experession
we got to const : 0 
-- reducing instruction list one-by-one , inst number : 0
-- reducing instruction list one-by-one , inst number : 1
-- reducing instruction list one-by-one , inst number : 2
-- reducing instruction list one-by-one , inst number : 3
-- reducing instruction list one-by-one , inst number : 4
reducing now bloc
Created AST_BLOCK with instructs: 006B18B0
this bloc has 5 instructionsexiting now scope 1
exiting now scope 2
reduced-exited function-scope main ---------
 getting to node Unknown getting to node {
  aff (i = 45000)

  aff (j = (-123))

  aff (k = 43)

  VLPT(id: printd, type: FUNC_CALL, params: )

  return 0;
}
 getting to node aff (i = 45000)
 getting to node i getting to node 45000 getting to node aff (j = (-123))
 getting to node j getting to node (-123) getting to node 123 getting to node aff (k = 43)
 getting to node k getting to node 43 getting to node VLPT(id: printd, type: FUNC_CALL, params: )
param : (((((((((i + j)
 * k)
 / 100)
 + j)
 * k)
 * i)
 - j)
 << k)
 / ((k - j)
 >> 2)
)
 getting to node (((((((((i + j)
 * k)
 / 100)
 + j)
 * k)
 * i)
 - j)
 << k)
 / ((k - j)
 >> 2)
)
 getting to node ((((((((i + j)
 * k)
 / 100)
 + j)
 * k)
 * i)
 - j)
 << k)
 getting to node (((((((i + j)
 * k)
 / 100)
 + j)
 * k)
 * i)
 - j)
 getting to node ((((((i + j)
 * k)
 / 100)
 + j)
 * k)
 * i)
 getting to node (((((i + j)
 * k)
 / 100)
 + j)
 * k)
 getting to node ((((i + j)
 * k)
 / 100)
 + j)
 getting to node (((i + j)
 * k)
 / 100)
 getting to node ((i + j)
 * k)
 getting to node (i + j)
 getting to node i getting to node j getting to node k getting to node 100 getting to node j getting to node k getting to node i getting to node j getting to node k getting to node ((k - j)
 >> 2)
 getting to node (k - j)
 getting to node k getting to node j getting to node 2 getting to node return 0; getting to node 0