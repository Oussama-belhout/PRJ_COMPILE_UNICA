entering now scope-----
just got the id i 
just got the id j 
we got to const : 3 
just created new_binop
(j / 3)
reducing the bin op (/) propagated to experession
just got the aff 	
aff (i = (j / 3)
)
just got the id i 
just got the id j 
just created new_binop
(i + j)
reducing the bin op (+) propagated to experession
just got the id i 
just got the id n 
we got to const : 4 
just created new_binop
(n + 4)
reducing the bin op (+) propagated to experession
we got to const : 45000 
just got the id j 
just created new_binop
(45000 + j)
reducing the bin op (+) propagated to experession
just got the id i 
we got to const : 123 
just created new_binop
(i + 123)
reducing the bin op (+) propagated to experession
we got to const : 45000 
we got to const : 123 
just created new_binop
(45000 + 123)
reducing the bin op (+) propagated to experession
just got the id i 
just got the id j 
we got to const : 0 
just created new_binop
(j + 0)
reducing the bin op (+) propagated to experession
just created new_binop
(i + (j + 0)
)
reducing the bin op (+) propagated to experession
just got the id i 
we got to const : 0 
just created new_binop
(i + 0)
reducing the bin op (+) propagated to experession
just got the id j 
just created new_binop
((i + 0)
 + j)
reducing the bin op (+) propagated to experession
just got the id i 
we got to const : 0 
just created new_binop
(i + 0)
reducing the bin op (+) propagated to experession
just got the id j 
we got to const : 0 
just created new_binop
(j + 0)
reducing the bin op (+) propagated to experession
just created new_binop
((i + 0)
 + (j + 0)
)
reducing the bin op (+) propagated to experession
just got the id i 
we got to const : 0 
just created new_binop
(i + 0)
reducing the bin op (+) propagated to experession
we got to const : 123 
just created new_binop
((i + 0)
 + 123)
reducing the bin op (+) propagated to experession
we got to const : 45000 
just got the id j 
we got to const : 0 
just created new_binop
(j + 0)
reducing the bin op (+) propagated to experession
just created new_binop
(45000 + (j + 0)
)
reducing the bin op (+) propagated to experession
we got to const : 0 
-- reducing instruction list one-by-one , inst number : 0
-- reducing instruction list one-by-one , inst number : 1
-- reducing instruction list one-by-one , inst number : 2
-- reducing instruction list one-by-one , inst number : 3
-- reducing instruction list one-by-one , inst number : 4
-- reducing instruction list one-by-one , inst number : 5
-- reducing instruction list one-by-one , inst number : 6
-- reducing instruction list one-by-one , inst number : 7
-- reducing instruction list one-by-one , inst number : 8
-- reducing instruction list one-by-one , inst number : 9
-- reducing instruction list one-by-one , inst number : 10
reducing now bloc
Created AST_BLOCK with instructs: 00ABB5C8
this bloc has 11 instructions`- Block -- 0
   |- Assign
   |  |- Id: i
   |  `- BinOp [/]
   |     |- Id: j
   |     `- Number: 3
   |- VLPT [id: dinging, type: FUNC_CALL]
   |- VLPT [id: printd, type: FUNC_CALL]
   |- VLPT [id: printd, type: FUNC_CALL]
   |- VLPT [id: printd, type: FUNC_CALL]
   |- VLPT [id: printd, type: FUNC_CALL]
   |- VLPT [id: printd, type: FUNC_CALL]
   |- VLPT [id: printd, type: FUNC_CALL]
   |- VLPT [id: printd, type: FUNC_CALL]
   |- VLPT [id: last, type: FUNC_CALL]
  (Null Instruction)
exiting now scope 1
exiting now scope 2
reduced-exited function-scope main ---------
now printing the whole tree 
